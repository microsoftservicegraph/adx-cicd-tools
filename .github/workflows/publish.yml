name: Publish

on:
  workflow_dispatch

jobs:
  build-dictionaries:
    name: Build dictionaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get install unzip dictzip p7zip-full

      - name: Create build version
        id: createbuildversion
        run:
          echo "::set-output name=buildversion::$(date +'%y.%m%d').${{ github.run_number }}"

      - name: Check build version
        run:
          echo "Using version ${{steps.createbuildversion.outputs.buildversion}}"

      - name: Make version directory
        run:
          mkdir ${{steps.createbuildversion.outputs.buildversion}}

      - name: Download dictionary tools
        run: |
          sudo chmod +x update.sh
          cd ${{steps.createbuildversion.outputs.buildversion}}
          ../update.sh ${{steps.createbuildversion.outputs.buildversion}}

      - name: Build dictionaries
        run: |
          sudo chmod +x makedict.sh
          cd ${{steps.createbuildversion.outputs.buildversion}}
          ../makedict.sh ${{steps.createbuildversion.outputs.buildversion}}

      - name: Azure Login
        if: github.event_name != 'pull_request'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_KSAPPLICATIONS_STORAGE }}

      - name: Deploy files
        if: github.event_name != 'pull_request'
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
              az storage blob upload-batch --account-name ksapplications -d "dictionary/${{steps.createbuildversion.outputs.buildversion}}" -s "${{steps.createbuildversion.outputs.buildversion}}"

      - name: Deploy LICENSE
        if: github.event_name != 'pull_request'
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
              az storage blob upload --account-name ksapplications --container-name 'dictionary' --name "LICENSE" --file './LICENSE' --content-cache-control 'no-store max-age=0'
              az storage blob upload --account-name ksapplications --container-name 'dictionary' --name "${{steps.createbuildversion.outputs.buildversion}}/LICENSE" --file './LICENSE' --content-cache-control 'no-store max-age=0'

      - name: Azure Logout
        if: github.event_name != 'pull_request'
        run: |
              az logout

      - name: Create Tag
        uses: tvdias/github-tagger@v0.0.1
        with:
          tag: ${{steps.createbuildversion.outputs.buildversion}}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{steps.createbuildversion.outputs.buildversion}}
          name: "Release v${{steps.createbuildversion.outputs.buildversion}}"
          bodyFile: "./${{steps.createbuildversion.outputs.buildversion}}/release_notes.md"
          token: ${{ secrets.GITHUB_TOKEN }}

  finish:
    name: Finish
    needs: [ build-dictionaries ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-ruby@v1
      - name: Notify DPT on Discord
        if: github.event_name != 'pull_request'
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.DISCORD_DPT_DEPLOYMENT_NOTIFICATIONS_WEBHOOK_URL }}
          HOOK_OS_NAME: ${{ runner.os }}
          WORKFLOW_NAME: ${{ github.workflow }}
        run: |
          git clone https://github.com/DiscordHooks/github-actions-discord-webhook webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
