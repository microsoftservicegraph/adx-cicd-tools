name: Continuous Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  continuous-deployment:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Create build version
        id: createbuildversion
        run:
          echo "::set-output name=buildversion::$(date +'%y.%m%d').${{ github.run_number }}"

      - name: Check build version
        run:
          echo "Using version ${{steps.createbuildversion.outputs.buildversion}}"

      - name: Generate app.ver
        run: |
          echo ${{steps.createbuildversion.outputs.buildversion}} >"${{ github.workspace }}\publish\app.ver"
        shell: pwsh

      - name: Install dependencies
        run: |
          Install-Module -Name Logging -RequiredVersion 4.8.5 -Force
          Install-Module -Name PSScriptAnalyzer -RequiredVersion 1.20.0 -Force
        shell: pwsh

      - name: Validate module definition
        run: |
          Test-ModuleManifest "${{ github.workspace }}\src\adx-cicd-tools.psd1" | Format-List
        shell: pwsh

      - name: Linting & static analysis
        run: |
          $issues = @()
          Invoke-ScriptAnalyzer -Path "${{ github.workspace }}\src" -Recurse | Tee-Object -Variable issues
          # TODO: Fix the analyser issues and uncomment the line below.
          # if ($issues) { throw "PSScriptAnalyzer has detected $($issues.Length) issue(s)." }
        shell: pwsh

      - name: Test publishing processes
        env:
          POWERSHELLGALLERY_API_KEY: ${{ secrets.POWERSHELLGALLERY_API_KEY }}
        run: |
          $publishPath = "${{ github.workspace }}\publish\adx-cicd-tools"
          xcopy /frys "${{ github.workspace }}\src" "$publishPath\"
          Publish-Module -Path $publishPath -NuGetApiKey $env:POWERSHELLGALLERY_API_KEY -Verbose -WhatIf
        shell: pwsh

